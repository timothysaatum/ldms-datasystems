# Generated by Django 4.2.2 on 2023-11-06 03:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=150)),
                ('department_head', models.CharField(max_length=200)),
                ('contact', models.CharField(max_length=15)),
                ('email_address', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='labs/logos')),
                ('created_on', models.DateField(default=django.utils.timezone.now)),
                ('lab_name', models.CharField(max_length=100)),
                ('acreditation_code', models.CharField(max_length=150)),
                ('digital_address', models.CharField(max_length=200)),
                ('region_of_location', models.CharField(max_length=50)),
                ('telephone', models.CharField(max_length=30)),
                ('email_address', models.EmailField(max_length=254)),
                ('website', models.URLField(null=True)),
                ('is_acredited', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateField(default=django.utils.timezone.now)),
                ('test_name', models.CharField(max_length=1500)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('apply_discount', models.BooleanField(default=False)),
                ('department_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratories.department')),
            ],
        ),
        migrations.CreateModel(
            name='TestResultsPdf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_on', models.DateField(default=django.utils.timezone.now)),
                ('send_by', models.CharField(max_length=200)),
                ('send_to', models.CharField(max_length=150)),
                ('is_verified', models.BooleanField(default=False)),
                ('upload_pdf', models.FileField(blank=True, upload_to='labs/tests/results')),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratories.lab')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratories.test')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='laboratory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratories.lab'),
        ),
        migrations.AddField(
            model_name='department',
            name='tests_scope',
            field=models.ManyToManyField(to='laboratories.test'),
        ),
    ]
